{"version":3,"sources":["redux/shop/shop.selectors.js","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","CollectionItemContainer","styled","div","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","className","onClick","inverted","CollectionPreviewContainer","TitleContainer","h1","PreviewContainer","withRouter","title","items","history","match","routeName","push","path","toUpperCase","filter","idx","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","otherCollectionProps","isLoading","compose","WithSpinner","CollectionsOverview"],"mappings":"kGAAA,oJAEaA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAE5BC,EAAoBC,YAC/B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKG,eAGJC,EAA8BF,YACzC,CAACD,IACD,SAACE,GAAD,OAAiBA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAG5EC,EAAmB,SAACC,GAC/BR,YACE,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYO,GAAsB,SAIvDC,EAA6BT,YACxC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKY,cAGFC,EAA4BX,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG,gB,6FCzBJW,EAA0BC,IAAOC,IAAV,8fAoCvBC,EAAYF,YAAOG,IAAPH,CAAH,0PAeTI,EAAkBJ,IAAOC,IAAV,wKAMN,gBAAGI,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BN,IAAOC,IAAV,oIAQzBM,EAAgBP,IAAOQ,KAAV,mEAKbC,EAAiBT,IAAOQ,KAAV,iE,OCzCZE,gBACb,MALyB,SAAAC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGrBH,EArBQ,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOV,EAAaQ,EAAbR,SAErB,OACE,eAACN,EAAD,WACE,cAACK,EAAD,CAAiBY,UAAU,QAAQX,SAAUA,IAC7C,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBO,IAChB,cAACL,EAAD,UAAiBM,OAEnB,cAACb,EAAD,CAAWe,QAAS,kBAAML,EAAQC,IAAOK,UAAQ,EAAjD,gC,qJCtBOC,EAA6BnB,IAAOC,IAAV,q3BA6C1BmB,EAAiBpB,IAAOqB,GAAV,6KAYdC,EAAmBtB,IAAOC,IAAV,kN,OCjCdsB,eAfW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,UAAjC,OACxB,eAACT,EAAD,WACE,cAACC,EAAD,CAAgBH,QAAS,kBAAMS,EAAQG,KAAR,UAAgBF,EAAMG,KAAtB,YAA8BF,KAA7D,SACGJ,EAAMO,gBAET,cAACT,EAAD,UACGG,EACEO,QAAO,SAACnB,EAAMoB,GAAP,OAAeA,EAAM,KAC5BzC,KAAI,SAAAqB,GAAI,OACP,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKqB,eClBvBC,EAA+BnC,IAAOC,IAAV,2ECenCmC,EAAkBC,YAAyB,CAC/CjD,YAAaC,MAGAqB,cAAQ0B,EAAR1B,EAZoB,SAAC,GAAD,IAAGtB,EAAH,EAAGA,YAAH,OACjC,cAAC+C,EAAD,UACG/C,EAAYI,KAAI,gBAAG0C,EAAH,EAAGA,GAAOI,EAAV,6BACf,cAAC,EAAD,eAAgCA,GAARJ,WCJxBE,EAAkBC,YAAyB,CAC/CE,UAAW3C,MAGPuC,EAA+BK,YACnC9B,YAAQ0B,GACRK,IAFmCD,CAGnCE,GAEaP","file":"static/js/3.2706c347.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nexport const selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  (collections) => collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = (collectionUrlParam) => {\n  createSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : null)\n  );\n}\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);\n\n","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n  color: navy;\n\n  &:hover {\n    .image {\n      opacity: 1.0;\n    }\n\n    button {\n      opacity: 1.0;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: 1;\n      }\n\n      button {\n        opacity: 1;\n        color: goldenrod;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem } from 'redux/cart/cart.actions';\n\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './collection-item.styles';\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className='image' imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CollectionItem);\n","import styled from 'styled-components';\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  &:hover {\n    cursor: pointer;\n    & .background-image {\n      transform: scale(1.1);\n      transition: transform 2.2s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n    }\n    & .content {\n      transition: transform 2.2s;\n      opacity: 1;\n    }\n  }\n  &:first-child {\n    margin-right: 7.5px;\n  }\n  &:last-child {\n    margin-left: 7.5px;\n  }\n\n  @media screen and (max-width: 800px) {\n    align-items: center;\n    &:hover {\n    cursor: pointer;\n    & .background-image {\n      transform: scale(1.1);\n      transition: transform 2.2s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n    }\n    & .content {\n      transition: transform 2.2s;\n      opacity: 1;\n    }\n  }\n  &:first-child {\n    margin-right: 7.5px;\n  }\n  &:last-child {\n    margin-left: 7.5px;\n  }\n  }\n  }\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 28px;\n  font-weight: 600;\n  margin-bottom: 25px;\n  cursor: pointer;\n  color: white;\n\n  &:hover {\n    color: goldenrod;\n  }\n`;\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport CollectionItem from 'components/collection-item/collection-item.component';\n\nimport {\n  CollectionPreviewContainer,\n  TitleContainer,\n  PreviewContainer\n} from './collection-preview.styles';\n\nconst CollectionPreview = ({ title, items, history, match, routeName }) => (\n  <CollectionPreviewContainer>\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\n      {title.toUpperCase()}\n    </TitleContainer>\n    <PreviewContainer>\n      {items\n        .filter((item, idx) => idx < 4)\n        .map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n    </PreviewContainer>\n  </CollectionPreviewContainer>\n);\n\nexport default withRouter(CollectionPreview);\n","import styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  `;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\n\nexport const CollectionsOverview = ({ collections }) => (\n  <CollectionsOverviewContainer>\n    {collections.map(({ id, ...otherCollectionProps }) => (\n      <CollectionPreview key={id} {...otherCollectionProps} />\n    ))}\n  </CollectionsOverviewContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n});\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;"],"sourceRoot":""}