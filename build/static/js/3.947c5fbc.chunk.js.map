{"version":3,"sources":["redux/shop/shop.selectors.js","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","CollectionItemContainer","styled","div","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","className","onClick","inverted","CollectionPreviewContainer","TitleContainer","h1","PreviewContainer","withRouter","title","items","history","match","routeName","push","path","toUpperCase","filter","idx","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","otherCollectionProps","isLoading","compose","WithSpinner","CollectionsOverview"],"mappings":"kGAAA,oJAEaA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAE5BC,EAAoBC,YAC/B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKG,eAGJC,EAA8BF,YACzC,CAACD,IACD,SAACE,GAAD,OAAiBA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAG5EC,EAAmB,SAACC,GAC/BR,YACE,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYO,GAAsB,SAIvDC,EAA6BT,YACxC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKY,cAGFC,EAA4BX,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG,gB,6FCzBJW,EAA0BC,IAAOC,IAAV,8fAoCvBC,EAAYF,YAAOG,IAAPH,CAAH,0PAeTI,EAAkBJ,IAAOC,IAAV,wKAMN,gBAAGI,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BN,IAAOC,IAAV,oIAQzBM,EAAgBP,IAAOQ,KAAV,mEAKbC,EAAiBT,IAAOQ,KAAV,iE,OCzCZE,gBAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,QAAS,SAACC,GAAD,OAAUF,EAASC,YAAQC,QAGvBH,EArBe,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAC7BE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOV,EAAaQ,EAAbR,SAErB,OACE,eAACN,EAAD,WACE,cAACK,EAAD,CAAiBY,UAAU,QAAQX,SAAUA,IAC7C,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBO,IAChB,cAACL,EAAD,UAAiBM,OAEnB,cAACb,EAAD,CAAWe,QAAS,kBAAML,EAAQC,IAAOK,UAAQ,EAAjD,gC,qJCtBOC,EAA6BnB,IAAOC,IAAV,q3BA6C1BmB,EAAiBpB,IAAOqB,GAAV,6KAYdC,EAAmBtB,IAAOC,IAAV,kN,OC3BdsB,eArBkB,SAAC,GAAD,IAC/BC,EAD+B,EAC/BA,MACAC,EAF+B,EAE/BA,MACAC,EAH+B,EAG/BA,QACAC,EAJ+B,EAI/BA,MACAC,EAL+B,EAK/BA,UAL+B,OAO/B,eAACT,EAAD,WACE,cAACC,EAAD,CAAgBH,QAAS,kBAAMS,EAAQG,KAAR,UAAgBF,EAAMG,KAAtB,YAA8BF,KAA7D,SACGJ,EAAMO,gBAET,cAACT,EAAD,UACGG,EACEO,QAAO,SAACnB,EAAMoB,GAAP,OAAeA,EAAM,KAC5BzC,KAAI,SAACqB,GAAD,OACH,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKqB,eCxBvBC,EAA+BnC,IAAOC,IAAV,2ECenCmC,EAAkBC,YAAyB,CAC/CjD,YAAaC,MAGAqB,cAAQ0B,EAAR1B,EAZoB,SAAC,GAAD,IAAGtB,EAAH,EAAGA,YAAH,OACjC,cAAC+C,EAAD,UACG/C,EAAYI,KAAI,gBAAG0C,EAAH,EAAGA,GAAOI,EAAV,6BACf,cAAC,EAAD,eAAgCA,GAARJ,WCJxBE,EAAkBC,YAAyB,CAC/CE,UAAW3C,MAGPuC,EAA+BK,YACnC9B,YAAQ0B,GACRK,IAFmCD,CAGnCE,GAEaP","file":"static/js/3.947c5fbc.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nexport const selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) => {\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n}\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);\r\n\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n  color: navy;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 1.0;\r\n    }\r\n\r\n    button {\r\n      opacity: 1.0;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: 1;\r\n      }\r\n\r\n      button {\r\n        opacity: 1;\r\n        color: goldenrod;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addItem } from 'redux/cart/cart.actions';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer,\r\n} from './collection-item.styles';\r\n\r\nexport const CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className=\"image\" imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    & .background-image {\r\n      transform: scale(1.1);\r\n      transition: transform 2.2s cubic-bezier(0.25, 0.45, 0.45, 0.95);\r\n    }\r\n    & .content {\r\n      transition: transform 2.2s;\r\n      opacity: 1;\r\n    }\r\n  }\r\n  &:first-child {\r\n    margin-right: 7.5px;\r\n  }\r\n  &:last-child {\r\n    margin-left: 7.5px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n    &:hover {\r\n    cursor: pointer;\r\n    & .background-image {\r\n      transform: scale(1.1);\r\n      transition: transform 2.2s cubic-bezier(0.25, 0.45, 0.45, 0.95);\r\n    }\r\n    & .content {\r\n      transition: transform 2.2s;\r\n      opacity: 1;\r\n    }\r\n  }\r\n  &:first-child {\r\n    margin-right: 7.5px;\r\n  }\r\n  &:last-child {\r\n    margin-left: 7.5px;\r\n  }\r\n  }\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n  color: white;\r\n\r\n  &:hover {\r\n    color: goldenrod;\r\n  }\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CollectionItem from 'components/collection-item/collection-item.component';\r\n\r\nimport {\r\n  CollectionPreviewContainer,\r\n  TitleContainer,\r\n  PreviewContainer,\r\n} from './collection-preview.styles';\r\n\r\nexport const CollectionPreview = ({\r\n  title,\r\n  items,\r\n  history,\r\n  match,\r\n  routeName,\r\n}) => (\r\n  <CollectionPreviewContainer>\r\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\r\n      {title.toUpperCase()}\r\n    </TitleContainer>\r\n    <PreviewContainer>\r\n      {items\r\n        .filter((item, idx) => idx < 4)\r\n        .map((item) => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n    </PreviewContainer>\r\n  </CollectionPreviewContainer>\r\n);\r\n\r\nexport default withRouter(CollectionPreview);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionsOverviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  `;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport CollectionPreview from 'components/collection-preview/collection-preview.component';\r\n\r\nimport { selectCollectionsForPreview } from 'redux/shop/shop.selectors';\r\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\r\n\r\nexport const CollectionsOverview = ({ collections }) => (\r\n  <CollectionsOverviewContainer>\r\n    {collections.map(({ id, ...otherCollectionProps }) => (\r\n      <CollectionPreview key={id} {...otherCollectionProps} />\r\n    ))}\r\n  </CollectionsOverviewContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  collections: selectCollectionsForPreview,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\n\r\nimport { selectIsCollectionFetching } from 'redux/shop/shop.selectors';\r\nimport WithSpinner from 'components/with-spinner/with-spinner.component';\r\nimport CollectionsOverview from './collections-overview.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionFetching,\r\n});\r\n\r\nconst CollectionsOverviewContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;\r\n"],"sourceRoot":""}